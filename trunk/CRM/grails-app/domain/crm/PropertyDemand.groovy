package crm

class PropertyDemand {
	boolean isPurchaseDemand;
	Date addedDate;
	Date dueDate;
	Department department;
	boolean isDepartmentRequired;
	City city;
	String specifyCity;
	boolean isCityRequired;
	Neighborhood neighborhood;
	String specifyNeighborhood;
	boolean isNeighborhoodRequired;
	Float propertyMinArea;
	Float propertyMaxArea;
	boolean isAreaRequired;
	Usage mainUsage;
	String specifyUsage;
	boolean isUsageRequired;
	Zone zone;
	String specifyZone;
	boolean isZoneRequired;
	String specifyPropertyFeatures;
	String specifyBuildingFeatures;
	String additionalDescription;
	PropertyType propertyType;
	String specifyPropertyType;
	boolean isPropertyTypeRequired;
	BuildingType buildingType;
	String specifyBuildingType;
	boolean isBuildingTypeRequired;
	String timeAvailability;
	boolean offersOnly;
	Float price;
	Float averagePrice;
	Currency currency;
	Client client;
	CrmUser owner;
	CrmUser assignee;
	String specifyBroadcastMedia;
	BuildingCondition buildingCondition;
	boolean isBuildingConditionRequired;
	PriorityLevel priorityLevel;
	InterestLevel interestLevel;
	DemandStatus status;
	static hasMany = [concessions:Concession, advertisements:Advertisement, comments:Comment, userNotificationSubscriptions:UserNotificationSubscription, propertyFeaturesByPropertyDemand:PropertyFeatureByPropertyDemand, buildingFeaturesByPropertyDemand:BuildingFeatureByPropertyDemand/*,RealEstateAction,TagSelectedValue,CustomFieldSelectedValue*/]
    static constraints = {
		isPurchaseDemand(nullable:false);
		addedDate(nullable:false);
		dueDate(nullable:true);
		department(nullable:true);
		isDepartmentRequired(nullable:false);
		city(nullable:true);
		specifyCity(blank: true, nullable:true, size:0..80);
		isCityRequired(nullable:false);
		neighborhood(nullable:true);
		specifyNeighborhood(blank: true, nullable:true, size:0..80);
		isNeighborhoodRequired(nullable:false);
		propertyMinArea(blank: true, nullable:true);
		propertyMaxArea(blank: true, nullable:true);
		isAreaRequired(nullable:false);
		mainUsage(nullable:true);
		specifyUsage(blank: true, nullable:true, size:0..80);
		isUsageRequired(nullable:false);
		zone(nullable:true);
		specifyZone(blank: true, nullable:true, size:0..80);
		isZoneRequired(nullable:false);
		specifyPropertyFeatures(blank: true, nullable:true, size:0..80);
		specifyBuildingFeatures(blank: true, nullable:true, size:0..80);
		additionalDescription(blank: true, nullable:true, widget:'textArea', size:0..200);
		propertyType(nullable:true);
		specifyPropertyType(blank: true, nullable:true, size:0..80);
		isPropertyTypeRequired(nullable:false);
		buildingType(nullable:true);
		specifyBuildingType(blank: true, nullable:true, size:0..80);
		isBuildingTypeRequired(nullable:false);
		timeAvailability(blank: true, nullable:true, size:0..80);
		offersOnly(nullable:true);
		price(blank: true, nullable:true);
		averagePrice(blank: true, nullable:true);
		currency(nullable:true);
		client(nullable:false);
		owner(nullable:false);
		assignee(nullable:true);
		specifyBroadcastMedia(blank: true, nullable:true, widget:'textArea', size:0..80);
		buildingCondition(nullable:true);
		isBuildingConditionRequired(nullable:false);
		priorityLevel(nullable:false);
		interestLevel(nullable:false);
		status(nullable:false);
    }
}
